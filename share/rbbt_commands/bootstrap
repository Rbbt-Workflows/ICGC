#!/usr/bin/env ruby

require 'rbbt-util'
require 'rbbt/util/simpleopt'
require 'rbbt/workflow'
Workflow.require_workflow "Study"

$0 = "rbbt #{$previous_commands*""} #{ File.basename(__FILE__) }" if $previous_commands

default_dir = ICGC.root.find
options = SOPT.setup <<EOF

Bootstrap ICGC studies

$ #{$0} [options] [<target_directory>]

Default target directory is #{default_dir}

-h--help Print this help
-a--analyze Analyze the studies instead of just downloading them
-c--cpus Number of process to use
EOF
if options[:help]
  if defined? rbbt_usage
    rbbt_usage 
  else
    puts SOPT.usage
  end
  exit 0
end

target_directory = ARGV.shift || default_dir

Study.study_dir = Path.setup(target_directory)

require 'rbbt/util/semaphore'

require 'rbbt/entity/study'
require 'rbbt/entity/study/genotypes'
require 'rbbt/entity/study/cnv'

Workflow.require_workflow "ICGC"
require 'rbbt/entity/gene'
require 'rbbt/entity/genomic_mutation'


datasets = ICGC.job(:datasets).clean.run

num = ARGV.shift || "1"
num = options[:cpus] if options[:cpus]


Log.debug("Producing")
Misc.bootstrap(datasets) do |dataset|
  dir = File.join(target_directory, dataset)
  ICGC.job(:prepare_study, dataset, :dataset => dataset, :output => dir).run
end

if options[:analyze]
  Log.debug("Bootstrapping over #{num.to_i} processes")
  exec "rbbt workflow cmd Study bootstrap #{ target_directory } --cpus #{ num } --log #{Log.severity}"
end


